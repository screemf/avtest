{"name": "test_logout_and_access[admin-000p;lko]", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался статус 403 или 302 после logout, получен 200\nassert 200 in [403, 302]\n +  where 200 = <Response [200]>.status_code", "trace": "username = 'admin', password = '000p;lko'\n\n    @pytest.mark.parametrize(\"username,password\", [\n        (\"admin\", \"000p;lko\"),\n    ])\n    @allure.epic(\"Авторизация\")\n    @allure.feature(\"Авторизация и деавторизация\")\n    def test_logout_and_access(username,password):\n        base_url = BASE_URL\n        logout_url = f'{base_url}/user/logout/'\n        auth_cookies, sessionid = get_auth_tokens(username, password)\n        cookies = auth_cookies.copy()\n        cookies['sessionid'] = sessionid\n        with allure.step(\"Выполнение logout\"):\n            response = requests.get(\n                logout_url,\n                cookies=cookies\n            )\n            assert response.status_code in [200,302,301 ], \\\n                f\"Ожидался статус 200 или 302 после logout, получен {response.status_code}\"\n            with allure.step(\"Проверка доступа к защищенному ресурсу после logout\"):\n                response = requests.get(\n                    PROTECTED_GET,\n                    cookies=cookies)\n>               assert response.status_code in [403, 302], \\\n                    f\"Ожидался статус 403 или 302 после logout, получен {response.status_code}\"\nE               AssertionError: Ожидался статус 403 или 302 после logout, получен 200\nE               assert 200 in [403, 302]\nE                +  where 200 = <Response [200]>.status_code\n\nAuth_test.py:148: AssertionError"}, "steps": [{"name": "Выполнение logout", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался статус 403 или 302 после logout, получен 200\nassert 200 in [403, 302]\n +  where 200 = <Response [200]>.status_code\n", "trace": "  File \"C:\\Users\\scree\\PycharmProjects\\pythonProject_AQA\\Test\\Auth_test.py\", line 148, in test_logout_and_access\n    assert response.status_code in [403, 302], \\\n"}, "steps": [{"name": "Проверка доступа к защищенному ресурсу после logout", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался статус 403 или 302 после logout, получен 200\nassert 200 in [403, 302]\n +  where 200 = <Response [200]>.status_code\n", "trace": "  File \"C:\\Users\\scree\\PycharmProjects\\pythonProject_AQA\\Test\\Auth_test.py\", line 148, in test_logout_and_access\n    assert response.status_code in [403, 302], \\\n"}, "start": 1750711633345, "stop": 1750711633378}], "start": 1750711633316, "stop": 1750711633380}], "parameters": [{"name": "username", "value": "'admin'"}, {"name": "password", "value": "'000p;lko'"}], "start": 1750711632133, "stop": 1750711633381, "uuid": "49104aab-e16e-4464-8643-05663b1fd90c", "historyId": "1d44278e4c8bb1eba6878feebcd06205", "testCaseId": "f97e8fcf3f6a4c4c0461f7d9f2369bf0", "fullName": "Auth_test#test_logout_and_access", "labels": [{"name": "feature", "value": "Авторизация и деавторизация"}, {"name": "epic", "value": "Авторизация"}, {"name": "suite", "value": "Auth_test"}, {"name": "host", "value": "LAPTOP-AFAHUU77"}, {"name": "thread", "value": "25120-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Auth_test"}]}